{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","onTabClick","event","currentTarget","hash","slice","currentTab","id","title","textContent","content","replace","useState","activeTab","setActiveTab","activeTabId","setActiveTabId","useEffect","isActiveTab","find","tab","isActiveTabId","className","map","classNames","href","onClick","App","selectedTab","setSelectedTab","currentTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAa,SACjBC,GACI,IAAD,EACH,GAAIA,EAAMC,cAAcC,KAAKC,MAAM,KAAON,EAA1C,CAIA,IAAMO,EAAa,CACjBC,GAAIL,EAAMC,cAAcC,KAAKC,MAAM,GACnCG,MAAON,EAAMC,cAAcM,YAC3BC,QAAQ,aAAD,QAAe,UAACR,EAAMC,cAAcM,mBAArB,QAAoC,IAAIE,QAAQ,QAAS,MAGjFX,EAAcM,KAGhB,EAAkCM,mBAASd,EAAK,GAAGY,SAAnD,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAASd,EAAK,GAAGS,IAAvD,mBAAOQ,EAAP,KAAoBC,EAApB,KAYA,OAVAC,qBAAU,WAAO,IAAD,IACRC,GAAc,UAAApB,EAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIb,KAAOR,YAA5B,eAA4CW,UAC3DZ,EAAK,GAAGY,QACPW,GAAgB,UAAAvB,EAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIb,KAAOR,YAA5B,eAA4CQ,KAC7DT,EAAK,GAAGS,GAEbO,EAAaI,GACbF,EAAeK,KACd,CAACtB,IAGF,sBAAK,UAAQ,gBAAb,UACE,qBAAKuB,UAAU,gBAAf,SACE,6BACGxB,EAAKyB,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IAAW,CACpB,YAAaJ,EAAIb,KAAOQ,IAE1B,UAAQ,MAJV,SAOE,mBACEU,KAAI,WAAML,EAAIb,IACd,UAAQ,UACRmB,QAASzB,EAHX,SAKGmB,EAAIZ,SAPFY,EAAIb,WAcjB,qBAAKe,UAAU,QAAQ,UAAQ,aAA/B,SACGT,QCpEIf,EAAO,CAClB,CAAES,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBAG7BiB,EAAgB,WAAO,IAAD,EACjC,EAAsCf,mBAASd,EAAK,GAAGS,IAAvD,mBAAOqB,EAAP,KAAoBC,EAApB,KAQA,OACE,sBAAKP,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBxB,EAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIb,KAAOqB,YADlD,aACsB,EAA0CpB,SAGhE,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAe6B,EACf5B,cAfW,SAAC,GAAiB,IAAD,EAAdO,EAAc,EAAdA,GACZuB,GAAe,UAAAhC,EAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIb,KAAOA,YAA5B,eAAiCA,KAAMT,EAAK,GAAGS,GAEpEsB,EAAeC,UCfnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.23994709.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: CallableFunction;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const onTabClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (event.currentTarget.hash.slice(1) === selectedTabId) {\n      return;\n    }\n\n    const currentTab = {\n      id: event.currentTarget.hash.slice(1),\n      title: event.currentTarget.textContent,\n      content: `Some text ${(event.currentTarget.textContent ?? '').replace(/^\\D+/g, '')}`,\n    };\n\n    onTabSelected(currentTab);\n  };\n\n  const [activeTab, setActiveTab] = useState(tabs[0].content);\n  const [activeTabId, setActiveTabId] = useState(tabs[0].id);\n\n  useEffect(() => {\n    const isActiveTab = tabs.find(tab => tab.id === selectedTabId)?.content\n      || tabs[0].content;\n    const isActiveTabId = tabs.find(tab => tab.id === selectedTabId)?.id\n      || tabs[0].id;\n\n    setActiveTab(isActiveTab);\n    setActiveTabId(isActiveTabId);\n  }, [selectedTabId]);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({\n                'is-active': tab.id === activeTabId,\n              })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={onTabClick}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {activeTab}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const onSelect = ({ id }: Tab) => {\n    const currentTabId = tabs.find(tab => tab.id === id)?.id || tabs[0].id;\n\n    setSelectedTab(currentTabId);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTab)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab}\n        onTabSelected={onSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}